{"ast":null,"code":"var _jsxFileName = \"/home/goodbrom/karting/frontend/src/Pages/Reservation.js\";\nimport React, { Component } from 'react';\nimport Calendar from 'react-calendar';\n// import { formatDate } from 'react-calendar/dist/cjs/shared/dateFormatter'\n// import Calendar from 'react-calendar'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass Second extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: this.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n  word(el) {\n    const date = el; // Thu Dec 16 2021 15:49:39 GMT-0600\n    const options = {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    };\n    new Intl.DateTimeFormat('en-US', options).format(date);\n    console.log(el);\n  }\n}\nexport default Second;","map":{"version":3,"names":["React","Component","Calendar","jsxDEV","_jsxDEV","Fragment","_Fragment","Second","render","children","onChange","word","fileName","_jsxFileName","lineNumber","columnNumber","el","date","options","day","month","year","Intl","DateTimeFormat","format","console","log"],"sources":["/home/goodbrom/karting/frontend/src/Pages/Reservation.js"],"sourcesContent":["import React, { Component } from 'react'\nimport Calendar from 'react-calendar'\n// import { formatDate } from 'react-calendar/dist/cjs/shared/dateFormatter'\n// import Calendar from 'react-calendar'\n\nclass Second extends Component {\n\n\n  render() {\n\n    return (\n      <>\n      \n        <Calendar onChange={this.word} />\n\n      </>\n      \n    )\n  }\n\n  word(el){\n    const date = el // Thu Dec 16 2021 15:49:39 GMT-0600\n    const options = {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n    }\n    new Intl.DateTimeFormat('en-US', options).format(date)\n    console.log(el) \n  }\n}\n\nexport default Second \n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,MAAM,SAASN,SAAS,CAAC;EAG7BO,MAAMA,CAAA,EAAG;IAEP,oBACEJ,OAAA,CAAAE,SAAA;MAAAG,QAAA,eAEEL,OAAA,CAACF,QAAQ;QAACQ,QAAQ,EAAE,IAAI,CAACC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,gBAEjC,CAAC;EAGP;EAEAJ,IAAIA,CAACK,EAAE,EAAC;IACN,MAAMC,IAAI,GAAGD,EAAE,EAAC;IAChB,MAAME,OAAO,GAAG;MACdC,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE,SAAS;MAChBC,IAAI,EAAE;IACR,CAAC;IACD,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAEL,OAAO,CAAC,CAACM,MAAM,CAACP,IAAI,CAAC;IACtDQ,OAAO,CAACC,GAAG,CAACV,EAAE,CAAC;EACjB;AACF;AAEA,eAAeT,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}